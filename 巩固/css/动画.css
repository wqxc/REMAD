transition：两帧，from与to,开始和结束。根据时间来改变元素的属性值，需要一个事件来触发。
animation:可以有多帧，一帧一帧的。不需要事件来触发、



js动画与css动画：
渲染线程分为main thread和compositor thread。
如果CSS动画只是改变transforms和opacity，
这时整个CSS动画得以在compositor thread完成（而JS动画则会在main thread执行，然后触发compositor进行下一步操作）

在JS执行一些昂贵的任务时，main thread繁忙，CSS动画由于使用了compositor thread可以保持流畅
JS在执行一些昂贵的任务
同时CSS动画不触发layout或paint
在CSS动画或JS动画触发了paint或layout时，需要main thread进行Layer树的重计算，这时CSS动画或JS动画都会阻塞后续操作。


两者的优劣：
  功能涵盖面，JS比CSS3大
  定义动画过程的@keyframes不支持递归定义，如果有多种类似的动画过程，需要调节多个参数来生成的话，将会有很大的冗余（比如jQuery Mobile的动画方案），
  而JS则天然可以以一套函数实现多个不同的动画过程
  时间尺度上，@keyframes的动画粒度粗，而JS的动画粒度控制可以很细
  CSS3动画里被支持的时间函数非常少，不够灵活
  以现有的接口，CSS3动画无法做到支持两个以上的状态转化
  实现/重构难度不一，CSS3比JS更简单，性能调优方向固定
  对于帧速表现不好的低版本浏览器，CSS3可以做到自然降级，而JS则需要撰写额外代码
  CSS动画有天然事件支持（TransitionEnd、AnimationEnd，但是它们都需要针对浏览器加前缀），JS则需要自己写事件
  CSS3有兼容性问题，而JS大多时候没有兼容性问题
